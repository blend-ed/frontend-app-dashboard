@import "~bootstrap/scss/utilities";

// Add background, border, and text color utilities
// for all theme color levels.
$color-levels: 50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950;

@each $color, $value in $theme-colors {
    @each $level in $color-levels {
        @include bg-variant(".bg-#{$color}-#{$level}", theme-color($color, $level), true);
        @include text-emphasis-variant(".text-#{$color}-#{$level}", theme-color($color, $level), true);

        .border-#{$color}-#{$level} {
            border-color: theme-color($color, $level) !important;
        }
    }
}

.x-small {
    font-size: $x-small-font-size;
}

.micro {
    font-size: $micro-font-size;
    font-weight: normal;
    line-height: $micro-line-height;
}

.mw-xs {
    max-width: $max-width-xs !important;
}

.mw-sm {
    max-width: $max-width-sm !important;
}

.mw-md {
    max-width: $max-width-md !important;
}

.mw-lg {
    max-width: $max-width-lg !important;
}

.mw-xl {
    max-width: $max-width-xl !important;
}

.icon-spin {
    animation: spinner-border .75s linear infinite;
    -webkit-animation: spinner-border .75s linear infinite;
}

// Define breakpoints for `.w-*` class (e.g. `.w-md-100`)
@each $breakpoint-name, $breakpoint-value in $grid-breakpoints {
    @each $size-name, $size-value in $sizes {
        @media (min-width: $breakpoint-value) {
            .w-#{$breakpoint-name}-#{$size-name} {
                width: $size-value !important;
            }
        }
    }
}

// Define classes for rtl (margin-inline-start == margin-left, margin-inline-end == margin-right)
@each $size, $length in $spacers {
    .mis-#{$size} {
        margin-inline-start: $length !important;
    }

    .mie-#{$size} {
        margin-inline-end: $length !important;
    }
}

.mis-auto {
    margin-inline-start: auto !important;
}

.mie-auto {
    margin-inline-end: auto !important;
}

// Define classes for z-index
$indexes: (
    ) !default;
$indexes: map-merge((0: 0,
            1: 200,
            2: 400,
            3: 600,
            4: 800,
            5: 1000,
            6: 1200,
            7: 1400,
            8: 1600,
            9: 1800,
            10: 2000),
        $indexes
);

@each $index, $size in $indexes {
    .zindex-#{$index} {
        z-index: $size !important;
    }
}

@each $level in $levels {
    @each $box-shadow-side in $box-shadow-sides {
        .box-shadow-#{$box-shadow-side}-#{$level} {
            @include pgn-box-shadow($level, $box-shadow-side);
        }
    }
}

.shadow-xs {
    box-shadow: 0px 1px 2px 0px rgba(10, 13, 20, 0.03);
}

.shadow {
    box-shadow: 0px 16px 32px -12px rgba(14, 18, 27, 0.1) !important;
}

.focus {
    box-shadow: 0px 0px 0px 2px rgba(71, 108, 255, 0.24);
}

.focus-important {
    box-shadow: 0px 0px 0px 2px rgba(153, 160, 174, 0.16);
}

.focus-error {
    box-shadow: 0px 0px 0px 2px rgba(251, 55, 72, 0.24);
}

.btn-outline-neutral {
    border: 1.5px solid $black;
    box-shadow: 0px 1px 2px 0px rgba(27, 26, 29, 0.48);
}

.btn-outline-primary {
    border: 1.5px solid $blue;
    box-shadow: 0px 1px 2px 0px rgba(14, 18, 27, 0.24);
}

.btn-outline-error {
    border: 1.5px solid $red;
    box-shadow: 0px 1px 2px 0px rgba(233, 53, 68, 1);
}

.btn-outline-stroke {
    border: 1.5px solid $gray-200;
    box-shadow: 0px 1px 2px 0px rgba(27, 26, 29, 0.48);
}

.switch {
    box-shadow: 0px 4px 2px 0px rgba(14, 18, 27, 0.3);
}

.radius-0 {
    border-radius: 0 !important;
}

.radius-2 {
    border-radius: 2px !important;
}

.radius-4 {
    border-radius: 4px !important;
}

.radius-6 {
    border-radius: 6px !important;
}

.radius-8 {
    border-radius: 8px !important;
}

.radius-full {
    border-radius: 999px !important;
}